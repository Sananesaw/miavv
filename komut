const Discord = require('discord.js')
const moment = require('moment')
const db = require('quick.db')
const ayarlar = require('../ayarlar.json')
const client = new Discord.Client();
require("moment-duration-format");


const prefix = ayarlar.prefix

exports.run = async (bot, msg, args) => {


      let user = msg.mentions.users.first() || msg.author;
          let simdikitarih = moment.utc(msg.createdAt).format('DD MM YYYY');
    const kurulus = new Date().getTime() - user.createdAt.getTime();
    var kontrol;    const gün = moment.duration(kurulus).format("D")   

    if (kurulus < 1296000000) kontrol = 'Güvenilir Değil'
    if (kurulus > 1296000000) kontrol = 'Güvenilir'
  
      let userinfo = {};
        
      userinfo.avatar= user.displayAvatarURL;
       
      userinfo.id = user.id;
        
      userinfo.od1 = msg.guild.members.get(user.id).user.presence.game || "Oynadığı bir oyun yok"
       
      userinfo.status = user.presence.status.toString()
        .replace("dnd", `<a:rahatsiz:617149939570442240> Rahatsız Etmeyin`)
        .replace("online", `<a:aktif:617149969069244426> Çevrimiçi`)
        .replace("idle", `<a:mesgul:617149897115959350> Boşta`)
        .replace("offline", `<a:kapali:617150009980354579> Çevrimdışı`)  
  
        userinfo.dctarih = moment.utc(msg.guild.members.get(user.id).user.createdAt).format('DD/MM/YYYY HH:mm')
  
        userinfo.dctarihkatilma = moment.utc(msg.guild.members.get(user.id).joinedAt).format('DD/MM/YYYY HH:mm')
  
        const uembed = new Discord.RichEmbed()
        .setAuthor(user.tag, userinfo.avatar)
        .setThumbnail(userinfo.avatar)
        .addField(`ID`, userinfo.id, true)
        .addField(`Discord İsmi`,`${user.username}`,true)
        .setColor('RED')
        .addField(`Katılım Tarihi`, userinfo.dctarihkatilma, true)
        .addField(`Hesap Oluşturma Tarihi`, userinfo.dctarih, true)
        .addField(`Durum`, userinfo.status, true)
        .addField(`Güvenirlik Seviye (3)`,kontrol  , true)
    
        .addField(`Roller:`, `${msg.guild.members.get(user.id).roles.filter(r => r.name !== "@everyone").map(r => r).join(' , ') || "``Bu kullanıcıda hiçbir rol bulunmuyor.``"}`, false)
        
        msg.channel.send(uembed)
  
    }
exports.conf = {
  enabled: true,
  guildOnly: true,
 aliases: ['kullanıcı', 'kullanıcıbilgi','profil','pf'],
  kategori: 'kullanıcı',
  permLevel: 0
};
exports.help = {
  name: 'kullanıcı-bilgi',
  description: 'İstediğiniz kullanıcını bilgilerini gösterir.',
  usage: 'kullanıcı-bilgi'
};




---




const Discord = require('discord.js');
const ayarlar = require('../ayarlar.json');
const db = require('quick.db');
//Yashinu (Akame Owner)
exports.run = async(client, message, args) => {
  let prefix = await require('quick.db').fetch(`prefix_${message.guild.id}`) || ayarlar.prefix
  if(!message.member.hasPermission('ADMINISTRATOR')) return message.reply('Bu komutu kullanabilmek için `Yönetici` iznine sahip olmalısın!')
  
  let panel = await db.fetch(`sunucupanel_${message.guild.id}`)
  if(args[0] === "sil" || args[0] === "kapat") {
    db.delete(`sunucupanel_${message.guild.id}`)
    try {
      await message.guild.channels.find(x => (x.name).includes("• Sunucu Panel")).delete()
      await message.guild.channels.find(x => (x.name).includes("Toplam Üye •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Aktif Üye •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Botlar •")).delete()
      await message.guild.channels.find(x => (x.name).includes("Rekor Aktiflik •")).delete()
    } catch(e) { }
    message.channel.send(`Ayarlanan sunucu paneli başarıyla devre dışı bırakıldı!`)
   return 
  }

  if(panel) return message.channel.send(`Bu sunucuda panel zaten ayarlanmış! Devredışı bırakmak için;  \`${prefix}sunucupanel sil\``)
  
  message.channel.send(new Discord.RichEmbed().setColor('RANDOM').setTitle('Sunucu Panel').setDescription('Gerekli dosaylar kurulsun mu?').setFooter('Onaylıyorsanız 15 saniye içerisinde "evet" yazmalısınız.'))
  .then(() => {
    message.channel.awaitMessages(response => response.content === 'evet', {
      max: 1,
      time: 15000,
      errors: ['time'],
    }) 
    .then((collected) => { 
      try {
        let role = message.guild.roles.find("name", "@everyone");
        message.guild.createChannel(`${client.user.username} • Sunucu Panel`, 'category', [{id: message.guild.id, deny: ['CONNECT']}]);
        message.guild.createChannel(`Toplam Üye • ${message.guild.memberCount}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Aktif Üye • ${message.guild.members.filter(off => off.presence.status !== 'offline').size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Botlar • ${message.guild.members.filter(m => m.user.bot).size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
        message.guild.createChannel(`Rekor Aktiflik • ${message.guild.members.filter(off => off.presence.status !== 'offline').size}`, 'voice').then(channel => channel.setParent(message.guild.channels.find(channel => channel.name === `${client.user.username} • Sunucu Panel`))).then(c => {
          c.overwritePermissions(role, {
            CONNECT: false,
          });
        })
     
        db.set(`sunucupanel_${message.guild.id}`, message.guild.members.filter(off => off.presence.status !== 'offline').size)
        message.channel.send(`Sunucu panel için gerekli kanallar oluşturulup, ayarlamalar yapıldı!  \`(Oda isimlerini değiştirmeyin, çalışmaz!)\``)
      } catch(e) {
        console.log(e.stack);
      }
    });
  });
};

exports.conf = {
  enabled: true,
  guildOnly: true,
  aliases: ["sunucu-panel",'panel','panel-kur'],
  permLevel: 3
};

exports.help = {
  name: 'sunucupanel',
  description: 'Sunucu istatistiklerini gösteren panel kurar ve otomatik olarak günceller.',
  usage: 'sunucupanel',
  kategori: 'ayarlar'
};




----




client.on('messageCreate', msg => {
  if (msg.content.toLowerCase() === 'burgaz') {
    msg.channel.send('**`Bizim Orda Rüzgar 12 Ay Tersten Eser !`**');
  }
});




---



.
